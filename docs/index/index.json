{"interfaceLanguages":{"occ":[{"children":[{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedframeworkversionnumber","title":"DxFeedFrameworkVersionNumber","type":"var"},{"path":"\/documentation\/dxfeedframework\/dxfeedframeworkversionstring","title":"DxFeedFrameworkVersionString","type":"var"}],"path":"\/documentation\/dxfeedframework","title":"DXFeedFramework","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/icebergexecutedsize","title":"var icebergExecutedSize: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/icebergflags","title":"var icebergFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/iceberghiddensize","title":"var icebergHiddenSize: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/icebergpeaksize","title":"var icebergPeakSize: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/icebergtype","title":"var icebergType: IcebergType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/analyticorder\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/analyticorder","title":"AnalyticOrder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/builder\/build()","title":"func build() throws -> DXEndpoint","type":"method"},{"path":"\/documentation\/dxfeedframework\/builder\/issupported(_:)","title":"func isSupported(String) throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/builder\/withname(_:)","title":"func withName(String) throws -> Self","type":"method"},{"path":"\/documentation\/dxfeedframework\/builder\/withproperties(_:)","title":"func withProperties([String : String]) throws -> Self","type":"method"},{"path":"\/documentation\/dxfeedframework\/builder\/withproperty(_:_:)","title":"func withProperty(String, String) throws -> Self","type":"method"},{"path":"\/documentation\/dxfeedframework\/builder\/withrole(_:)","title":"func withRole(Role) throws -> Self","type":"method"}],"path":"\/documentation\/dxfeedframework\/builder","title":"Builder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/init(_:)","title":"init(CandleSymbol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/askvolume","title":"var askVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/bidvolume","title":"var bidVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/candlesymbol","title":"var candleSymbol: CandleSymbol?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/close","title":"var close: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/count","title":"var count: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/eventsymbol","title":"var eventSymbol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/high","title":"var high: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/impvolatility","title":"var impVolatility: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/low","title":"var low: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/open","title":"var open: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/openinterest","title":"var openInterest: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/volume","title":"var volume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/vwap","title":"var vwap: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/candle\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/candle\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/candle\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/candle\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/candle\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/candle\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/candle\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candle\/time","title":"var time: Int64","type":"property"}],"path":"\/documentation\/dxfeedframework\/candle\/itimeseriesevent-implementations","title":"ITimeSeriesEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candle","title":"Candle","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/exchangecode","title":"let exchangeCode: Character","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/composite","title":"static let composite: CandleExchange","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/defaultexchange","title":"static let defaultExchange: CandleExchange","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/getattribute(_:)","title":"static func getAttribute(String?) -> CandleExchange","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/valueof(_:)","title":"static func valueOf(Character) -> CandleExchange","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleexchange\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/candleexchange\/icandlesymbolproperty-implementations","title":"ICandleSymbolProperty Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candleexchange","title":"CandleExchange","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/periodintervalmillis","title":"let periodIntervalMillis: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/type","title":"let type: CandleType","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/value","title":"let value: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/attributekey","title":"static let attributeKey: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/day","title":"static let day: CandlePeriod","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/defaultperiod","title":"static let defaultPeriod: CandlePeriod","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/tick","title":"static let tick: CandlePeriod","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/getattribute(_:)","title":"static func getAttribute(String?) throws -> CandlePeriod","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/parse(_:)","title":"static func parse(String) throws -> CandlePeriod","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/valueof(value:type:)","title":"static func valueOf(value: Double, type: CandleType) -> CandlePeriod","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/==(_:_:)","title":"static func == (CandlePeriod, CandlePeriod) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candleperiod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleperiod\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/candleperiod\/icandlesymbolproperty-implementations","title":"ICandleSymbolProperty Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candleperiod","title":"CandlePeriod","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/value","title":"let value: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/attributekey","title":"static let attributeKey: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/defaultcandlepricelevel","title":"static let defaultCandlePriceLevel: CandlePriceLevel?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/getattribute(_:)","title":"static func getAttribute(String?) throws -> CandlePriceLevel","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/normalizeattributeforsymbol(_:)","title":"static func normalizeAttributeForSymbol(String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/parse(_:)","title":"static func parse(String) throws -> CandlePriceLevel","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/valueof(value:)","title":"static func valueOf(value: Double) throws -> CandlePriceLevel","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/==(_:_:)","title":"static func == (CandlePriceLevel, CandlePriceLevel) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candlepricelevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlepricelevel\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/candlepricelevel\/icandlesymbolproperty-implementations","title":"ICandleSymbolProperty Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candlepricelevel","title":"CandlePriceLevel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/alignment","title":"var alignment: CandleAlignment?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/basesymbol","title":"var baseSymbol: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/exchange","title":"var exchange: CandleExchange?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/period","title":"var period: CandlePeriod?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/price","title":"var price: CandlePrice?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/pricelevel","title":"var priceLevel: CandlePriceLevel?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/session","title":"var session: CandleSession?","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/symbol","title":"var symbol: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/valueof(_:)","title":"static func valueOf(String) throws -> CandleSymbol","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/valueof(_:_:)","title":"static func valueOf(String, [ICandleSymbolProperty]) -> CandleSymbol","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/==(_:_:)","title":"static func == (CandleSymbol, CandleSymbol) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candlesymbol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/candlesymbol\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/stringvalue-20mbs","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesymbol\/stringvalue-84vpy","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/candlesymbol\/symbol-implementations","title":"Symbol Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candlesymbol","title":"CandleSymbol","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/init(_:)","title":"init([T])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/append(newelement:)","title":"func append(newElement: T)","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/append(newelements:)","title":"func append(newElements: [T])","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/reader(_:)","title":"func reader<U>(([T]) throws -> U) rethrows -> U","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/removeall(where:)","title":"func removeAll(where: (T) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/writer(_:)","title":"func writer((inout [T]) -> Void)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentarray\/subscript(_:)","title":"subscript(Int) -> T","type":"subscript"}],"path":"\/documentation\/dxfeedframework\/concurrentarray","title":"ConcurrentArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/init(_:)","title":"init(Set<T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/insert(_:)","title":"func insert(T)","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/reader(_:)","title":"func reader<U>((Set<T>) throws -> U) rethrows -> U","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/remove(_:)","title":"func remove(T)","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/remove(at:)","title":"func remove(at: Set<T>.Index)","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentset\/writer(_:)","title":"func writer((inout Set<T>) -> Void)","type":"method"}],"path":"\/documentation\/dxfeedframework\/concurrentset","title":"ConcurrentSet","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/count","title":"var count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/insert(_:)","title":"func insert(T)","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/member(_:)","title":"func member(T) -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/reader(_:)","title":"func reader<U>((NSHashTable<AnyObject>) throws -> U) rethrows -> U","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/remove(_:)","title":"func remove(T)","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable\/writer(_:)","title":"func writer((inout NSHashTable<AnyObject>) -> Void)","type":"method"}],"path":"\/documentation\/dxfeedframework\/concurrentweakhashtable","title":"ConcurrentWeakHashTable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/init(era:year:month:day:dayofweek:milliseconds:)","title":"init(era: Int32, year: Int32, month: Int32, day: Int32, dayOfWeek: Int32, milliseconds: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/day","title":"let day: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/dayofweek","title":"let dayOfWeek: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/era","title":"let era: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/milliseconds","title":"let milliseconds: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/month","title":"let month: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxdateoffset\/year","title":"let year: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/dxdateoffset","title":"DXDateOffset","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.property","title":"let role: Role","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/add(listener:)","title":"func add<O>(listener: O)","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/awaitnotconnected()","title":"func awaitNotConnected() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/awaitprocessed()","title":"func awaitProcessed() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/close()","title":"func close() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/closeandawaittermination()","title":"func closeAndAwaitTermination() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/connect(_:)","title":"func connect(String) throws -> Self","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/disconnect()","title":"func disconnect() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/disconnectandclear()","title":"func disconnectAndClear() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/geteventtypes()","title":"func getEventTypes() throws -> [EventCode]","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/getfeed()","title":"func getFeed() -> DXFeed?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/getpublisher()","title":"func getPublisher() -> DXPublisher?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/getstate()","title":"func getState() throws -> DXEndpointState","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/reconnect()","title":"func reconnect() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/remove(listener:)","title":"func remove<O>(listener: O)","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/set(password:)","title":"func set(password: String) throws -> Self","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/set(username:)","title":"func set(userName: String) throws -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/builder()","title":"static func builder() -> Builder","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/create(_:)","title":"static func create(Role) throws -> DXEndpoint","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/getinstance(_:)","title":"static func getInstance(Role) throws -> DXEndpoint","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/heartbeattimeout","title":"case heartBeatTimeout","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/extrapropery","title":"DXEndpoint.ExtraPropery","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/address","title":"case address","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/aggregationperiod","title":"case aggregationPeriod","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/eventtime","title":"case eventTime","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/name","title":"case name","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/password","title":"case password","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/properties","title":"case properties","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/publisheraddressproperty","title":"case publisherAddressProperty","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/publisherproperties","title":"case publisherProperties","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/publisherthreadpoolsize","title":"case publisherThreadPoolSize","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/schemeenabledpropertyprefix","title":"case schemeEnabledPropertyPrefix","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/schemenanotime","title":"case schemeNanoTime","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/storeeverything","title":"case storeEverything","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/threadpoolsize","title":"case threadPoolSize","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/user","title":"case user","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/wildcardenable","title":"case wildcardEnable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/property\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/property","title":"DXEndpoint.Property","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/feed","title":"case feed","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/localhub","title":"case localHub","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/ondemandfeed","title":"case onDemandFeed","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/publisher","title":"case publisher","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/streamfeed","title":"case streamFeed","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/streampublisher","title":"case streamPublisher","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxendpoint\/role-swift.enum","title":"DXEndpoint.Role","type":"enum"}],"path":"\/documentation\/dxfeedframework\/dxendpoint","title":"DXEndpoint","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/createsubscription(_:)-291vo","title":"func createSubscription([IEventType.Type]) throws -> DXFeedSubscription","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/createsubscription(_:)-75b18","title":"func createSubscription(IEventType.Type) throws -> DXFeedSubscription","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/createtimeseriessubscription(_:)-1tpag","title":"func createTimeSeriesSubscription(ITimeSeriesEvent.Type) throws -> DXFeedTimeSeriesSubscription","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/createtimeseriessubscription(_:)-tuiu","title":"func createTimeSeriesSubscription([ITimeSeriesEvent.Type]) throws -> DXFeedTimeSeriesSubscription","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/getindexedeventspromise(type:symbol:source:)","title":"func getIndexedEventsPromise(type: IEventType.Type, symbol: Symbol, source: IndexedEventSource) throws -> Promise?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/getlastevent(type:)","title":"func getLastEvent(type: MarketEvent) throws -> ILastingEvent?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/getlasteventpromise(type:symbol:)","title":"func getLastEventPromise(type: IEventType.Type, symbol: Symbol) throws -> Promise?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/getlasteventpromises(type:symbols:)","title":"func getLastEventPromises(type: IEventType.Type, symbols: [Symbol]) throws -> [Promise]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/getlastevents(types:)","title":"func getLastEvents(types: [MarketEvent]) throws -> [ILastingEvent]","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/gettimeseries(type:symbol:fromtime:totime:)","title":"func getTimeSeries(type: IEventType.Type, symbol: Symbol, fromTime: Long, toTime: Long) -> Task<[MarketEvent]?, Error>","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeed\/gettimeseriespromise(type:symbol:fromtime:totime:)","title":"func getTimeSeriesPromise(type: IEventType.Type, symbol: Symbol, fromTime: Long, toTime: Long) throws -> Promise?","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxfeed","title":"DXFeed","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/add(listener:)","title":"func add<O>(listener: O) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/addsymbols(_:)-5yspy","title":"func addSymbols([Symbol]) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/addsymbols(_:)-vs1f","title":"func addSymbols(Symbol) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/getsymbols()","title":"func getSymbols() throws -> [Symbol]","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/remove(listener:)","title":"func remove<O>(listener: O)","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/removesymbols(_:)","title":"func removeSymbols([Symbol]) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/setsymbols(_:)","title":"func setSymbols([Symbol]) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/receiveevents(_:)","title":"func receiveEvents([MarketEvent])","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/dxeventlistener-implementations","title":"DXEventListener Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/==(_:_:)","title":"static func == (DXFeedSubscription, DXFeedSubscription) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/eventtypes","title":"var eventTypes: [IEventType.Type]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/addchangelistener(_:)","title":"func addChangeListener(ObservableSubscriptionChangeListener) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/isclosed()","title":"func isClosed() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/iscontains(_:)","title":"func isContains(IEventType.Type) -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/removechangelistener(_:)","title":"func removeChangeListener(ObservableSubscriptionChangeListener) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxfeedsubscription\/iobservablesubscription-implementations","title":"IObservableSubscription Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxfeedsubscription","title":"DXFeedSubscription","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxfeedtimeseriessubscription\/set(fromtime:)","title":"func set(fromTime: Long) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxfeedtimeseriessubscription","title":"DXFeedTimeSeriesSubscription","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/init()","title":"init() throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/add(listener:)","title":"func add<O>(listener: O) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/createonconcurrentlinkedqueue()","title":"func createOnConcurrentLinkedQueue() throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/createonfixedthreadpool(numberofthreads:nameofthread:)","title":"func createOnFixedThreadPool(numberOfThreads: Int32, nameOfthread: String) throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/createonscheduledthreadpool(numberofthreads:nameofthread:)","title":"func createOnScheduledThreadPool(numberOfThreads: Int32, nameOfthread: String) throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/getlastupdatetime()","title":"func getLastUpdateTime() -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/remove(listener:)","title":"func remove<O>(listener: O)","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/updateinstrumentprofile(profile:)","title":"func updateInstrumentProfile(profile: InstrumentProfile) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector\/view()","title":"func view() throws -> DXProfileIterator","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilecollector","title":"DXInstrumentProfileCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/init(_:_:)","title":"init(String, DXInstrumentProfileCollector) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/add(listener:)","title":"func add<O>(listener: O)","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/close()","title":"func close() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/getaddress()","title":"func getAddress() -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/getlastmodified()","title":"func getLastModified() -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/getstate()","title":"func getState() throws -> DXInstrumentProfileConnectionState","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/getupdateperiod()","title":"func getUpdatePeriod() -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/remove(listener:)","title":"func remove<O>(listener: O)","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/setupdateperiod(_:)","title":"func setUpdatePeriod(Long) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/start()","title":"func start() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection\/waituntilcompleted(_:)","title":"func waitUntilCompleted(Long)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnection","title":"DXInstrumentProfileConnection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/getlastmodified()","title":"func getLastModified() -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/read(data:)","title":"func read(data: Data) throws -> [InstrumentProfile]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/read(data:address:)","title":"func read(data: Data, address: String) throws -> [InstrumentProfile]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/readcompressed(data:)","title":"func readCompressed(data: Data) throws -> [InstrumentProfile]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/readfromfile(address:)","title":"func readFromFile(address: String) throws -> [InstrumentProfile]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/readfromfile(address:user:password:)","title":"func readFromFile(address: String, user: String, password: String) throws -> [InstrumentProfile]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/wascomplete()","title":"func wasComplete() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader\/resolvesourceurl(address:)","title":"static func resolveSourceURL(address: String) -> String","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofilereader","title":"DXInstrumentProfileReader","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxprofileiterator\/hasnext()","title":"func hasNext() throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxprofileiterator\/next()","title":"func next() throws -> InstrumentProfile","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxprofileiterator","title":"DXProfileIterator","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxpublisher\/getsubscription(_:)","title":"func getSubscription(IEventType.Type) throws -> IObservableSubscription","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxpublisher\/publish(events:)","title":"func publish(events: [MarketEvent]) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxpublisher","title":"DXPublisher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/init(instrumentprofile:)","title":"init(instrumentProfile: InstrumentProfile) throws","type":"init"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/init(instrumentprofile:venue:)","title":"init(instrumentProfile: InstrumentProfile, venue: String) throws","type":"init"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/init(scheduledefinition:)","title":"init(scheduleDefinition: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/getdaybyid(day:)","title":"func getDayById(day: Int32) throws -> ScheduleDay","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/getdaybytime(time:)","title":"func getDayByTime(time: Long) throws -> ScheduleDay","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/getdaybyyearmonthday(yearmonthday:)","title":"func getDayByYearMonthDay(yearMonthDay: Int32) throws -> ScheduleDay","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/getname()","title":"func getName() throws -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/getnearestsessionbytime(time:filter:)","title":"func getNearestSessionByTime(time: Long, filter: SessionFilter) throws -> ScheduleSession","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/getsessionbytime(time:)","title":"func getSessionByTime(time: Long) throws -> ScheduleSession","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/gettimezone()","title":"func getTimeZone() throws -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/gettimezoneid()","title":"func getTimeZoneId() throws -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/downloaddefaults(_:)","title":"static func downloadDefaults(String) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/gettradingvenues(profile:)","title":"static func getTradingVenues(profile: InstrumentProfile) throws -> [String]","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxschedule\/setdefaults(_:)","title":"static func setDefaults(Data) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxschedule","title":"DXSchedule","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/init(fulliso:)","title":"init(fullIso: DXTimeFormat) throws","type":"init"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/init(timezone:)","title":"init(timeZone: DXTimeZone) throws","type":"init"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/init(withmillis:)","title":"init(withMillis: DXTimeFormat) throws","type":"init"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/init(withtimezone:)","title":"init(withTimeZone: DXTimeFormat) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/withmillis","title":"var withMillis: DXTimeFormat?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/format(value:)","title":"func format(value: Long) throws -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/parse(_:)-5esr9","title":"func parse(String) throws -> Long?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/parse(_:)-9kjgl","title":"func parse(String) throws -> Date?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/defaulttimeformat","title":"static let defaultTimeFormat: DXTimeFormat?","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxtimeformat\/gmttimeformat","title":"static let gmtTimeFormat: DXTimeFormat?","type":"property"}],"path":"\/documentation\/dxfeedframework\/dxtimeformat","title":"DXTimeFormat","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimeperiod\/getnanos()","title":"func getNanos() throws -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimeperiod\/getseconds()","title":"func getSeconds() throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimeperiod\/gettime()","title":"func getTime() throws -> Long","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimeperiod\/unlimited","title":"static let unlimited: DXTimePeriod?","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxtimeperiod\/zero","title":"static let zero: DXTimePeriod?","type":"property"}],"path":"\/documentation\/dxfeedframework\/dxtimeperiod","title":"DXTimePeriod","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/init(timezoneid:)","title":"init(timeZoneID: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/diplayname()","title":"func diplayName() throws -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/diplayname(daylight:style:)","title":"func diplayName(dayLight: Int32, style: Int32) throws -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/getdstsavings()","title":"func getDSTSavings() throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/getoffset(date:)","title":"func getOffset(date: Int64) throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/getoffset2(offset:)","title":"func getOffset2(offset: DXDateOffset) throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/getrawoffset()","title":"func getRawOffset() throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/hassamerules(other:)","title":"func hasSameRules(other: DXTimeZone) throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/id()","title":"func id() throws -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/indaylighttime(date:)","title":"func inDaylightTime(date: Int64) throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/observesdaylighttime()","title":"func observesDaylightTime() throws -> Int32","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/setid(id:)","title":"func setID(id: String) throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/setrawoffset(offsetmillis:)","title":"func setRawOffset(offsetMillis: Int32) throws -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/usedaylighttime()","title":"func useDaylightTime() throws -> Int32","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxtimezone\/defaulttimezone","title":"static let defaultTimeZone: DXTimeZone?","type":"property"}],"path":"\/documentation\/dxfeedframework\/dxtimezone","title":"DXTimeZone","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/init(symbol:source:)","title":"init(symbol: T, source: IndexedEventSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/stringvalue-6g718","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/==(_:_:)","title":"static func == (GenericIndexedEventSubscriptionSymbol<T>, GenericIndexedEventSubscriptionSymbol<T>) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/stringvalue-8epbb","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol\/symbol-implementations","title":"Symbol Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/genericindexedeventsubscriptionsymbol","title":"GenericIndexedEventSubscriptionSymbol","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/delta","title":"var delta: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/gamma","title":"var gamma: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/price","title":"var price: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/rho","title":"var rho: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/theta","title":"var theta: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/vega","title":"var vega: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/volatility","title":"var volatility: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/greeks\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/greeks\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/greeks\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/greeks\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/greeks\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/greeks\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/greeks\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/greeks\/time","title":"var time: Long","type":"property"}],"path":"\/documentation\/dxfeedframework\/greeks\/itimeseriesevent-implementations","title":"ITimeSeriesEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/greeks","title":"Greeks","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icebergtypeext\/valueof(value:)","title":"static func valueOf(value: Int) -> IcebergType","type":"method"}],"path":"\/documentation\/dxfeedframework\/icebergtypeext","title":"IcebergTypeExt","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/init(_:_:)","title":"init(Int, String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/defaultsource","title":"static let defaultSource: IndexedEventSource","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/indexedeventsource\/==(_:_:)","title":"static func == (IndexedEventSource, IndexedEventSource) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/indexedeventsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/indexedeventsource","title":"IndexedEventSource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/init(symbol:source:)","title":"init(symbol: Symbol, source: IndexedEventSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/stringvalue-898pd","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/==(_:_:)","title":"static func == (IndexedEventSubscriptionSymbol, IndexedEventSubscriptionSymbol) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/stringvalue-6d276","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol\/symbol-implementations","title":"Symbol Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/indexedeventsubscriptionsymbol","title":"IndexedEventSubscriptionSymbol","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/additionalunderlyings","title":"var additionalUnderlyings: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/basecurrency","title":"var baseCurrency: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/cfi","title":"var cfi: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/country","title":"var country: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/currency","title":"var currency: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/cusip","title":"var cusip: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/descriptionstr","title":"var descriptionStr: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/exchangedata","title":"var exchangeData: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/exchanges","title":"var exchanges: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/expiration","title":"var expiration: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/expirationstyle","title":"var expirationStyle: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/icb","title":"var icb: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/isin","title":"var isin: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/lasttrade","title":"var lastTrade: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/localdescription","title":"var localDescription: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/localsymbol","title":"var localSymbol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/mmy","title":"var mmy: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/multiplier","title":"var multiplier: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/opol","title":"var opol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/optiontype","title":"var optionType: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/priceincrements","title":"var priceIncrements: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/product","title":"var product: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/sedol","title":"var sedol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/settlementstyle","title":"var settlementStyle: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/sic","title":"var sic: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/spc","title":"var spc: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/strike","title":"var strike: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/symbol","title":"var symbol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/tradinghours","title":"var tradingHours: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/type","title":"var type: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/underlying","title":"var underlying: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/addnonemptycustomfieldnames(_:)","title":"func addNonEmptyCustomFieldNames(inout [String]) -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/getdatefield(_:)","title":"func getDateField(String) -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/getfield(_:)","title":"func getField(String) -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/getipftype()","title":"func getIpfType() -> InstrumentProfileType?","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/getnumericfield(_:)","title":"func getNumericField(String) -> Double","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/setdatefield(_:_:)","title":"func setDateField(String, Long)","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/setfield(_:_:)","title":"func setField(String, String)","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/setnumericfield(_:_:)","title":"func setNumericField(String, Double)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/==(_:_:)","title":"static func == (InstrumentProfile, InstrumentProfile) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/instrumentprofile\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofile\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/instrumentprofile\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/instrumentprofile","title":"InstrumentProfile","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/marketevent\/analyticorder","title":"var analyticOrder: AnalyticOrder","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/candle","title":"var candle: Candle","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/eventsymbol","title":"var eventSymbol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/eventtime","title":"var eventTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/greeks","title":"var greeks: Greeks","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/hashcode","title":"var hashCode: Int","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/lastingevent","title":"var lastingEvent: ILastingEvent?","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/optionsale","title":"var optionSale: OptionSale","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/order","title":"var order: Order","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/profile","title":"var profile: Profile","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/quote","title":"var quote: Quote","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/series","title":"var series: Series","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/spreadorder","title":"var spreadOrder: SpreadOrder","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/summary","title":"var summary: Summary","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/theoprice","title":"var theoPrice: TheoPrice","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/timeandsale","title":"var timeAndSale: TimeAndSale","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/trade","title":"var trade: Trade","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/tradeeth","title":"var tradeETH: TradeETH","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/type-swift.property","title":"var type: EventCode","type":"property"},{"path":"\/documentation\/dxfeedframework\/marketevent\/underlying","title":"var underlying: Underlying","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/marketevent\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/marketevent\/type-swift.type.property","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/marketevent","title":"MarketEvent","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/changeattributestringbykey(_:_:_:)","title":"static func changeAttributeStringByKey(String?, String?, String?) throws -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/changeexchangecode(_:_:)","title":"static func changeExchangeCode(String?, Character) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/getattributestringbykey(_:_:)","title":"static func getAttributeStringByKey(String?, String?) throws -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/getbasesymbol(_:)","title":"static func getBaseSymbol(String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/getexchangecode(_:)","title":"static func getExchangeCode(String?) -> Character","type":"method"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/hasexchangecode(_:)","title":"static func hasExchangeCode(String?) -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/marketeventsymbols\/removeattributestringbykey(_:_:)","title":"static func removeAttributeStringByKey(String?, String) -> String?","type":"method"}],"path":"\/documentation\/dxfeedframework\/marketeventsymbols","title":"MarketEventSymbols","type":"class"},{"path":"\/documentation\/dxfeedframework\/nativeinstrumentprofilecollector","title":"NativeInstrumentProfileCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/optionsale\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/optionsale\/aggressorside","title":"var aggressorSide: Side","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/askprice","title":"var askPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/bidprice","title":"var bidPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/delta","title":"var delta: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/exchangecode","title":"var exchangeCode: Int16","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/exchangesaleconditions","title":"var exchangeSaleConditions: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/iscancel","title":"var isCancel: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/iscorrection","title":"var isCorrection: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/isextendedtradinghours","title":"var isExtendedTradingHours: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/isnew","title":"var isNew: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/isspreadleg","title":"var isSpreadLeg: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/isvalidtick","title":"var isValidTick: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/optionsaletype","title":"var optionSaleType: TimeAndSaleType","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/optionsymbol","title":"var optionSymbol: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/price","title":"var price: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/size","title":"var size: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/time","title":"var time: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/timenanopart","title":"var timeNanoPart: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/timenanos","title":"var timeNanos: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/timesequence","title":"var timeSequence: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/underlyingprice","title":"var underlyingPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/volatility","title":"var volatility: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/optionsale\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/gettradethroughexempt()","title":"func getTradeThroughExempt() -> Character","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/settradethroughexempt(_:)","title":"func setTradeThroughExempt(Character) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/optionsale\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/optionsale\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/optionsale\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/optionsale\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/optionsale\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/optionsale\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/optionsale","title":"OptionSale","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/order\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/order\/marketmaker","title":"var marketMaker: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/order\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/order\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/order","title":"Order","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderbase\/action","title":"var action: OrderAction","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/actiontime","title":"var actionTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/auxorderid","title":"var auxOrderId: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/count","title":"var count: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/executedsize","title":"var executedSize: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/orderid","title":"var orderId: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/orderside","title":"var orderSide: Side","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/price","title":"var price: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/scope","title":"var scope: Scope","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/size","title":"var size: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/time","title":"var time: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/timenanopart","title":"var timeNanoPart: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/timenanos","title":"var timeNanos: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/timesequence","title":"var timeSequence: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/tradeid","title":"var tradeId: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/tradeprice","title":"var tradePrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/tradesize","title":"var tradeSize: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderbase\/getexchangecode()-3z720","title":"func getExchangeCode() -> Character","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/getexchangecode()-7cljn","title":"func getExchangeCode() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/hsasize()","title":"func hsaSize() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/setexchangecode(_:)","title":"func setExchangeCode(Character) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/setindex(_:)","title":"func setIndex(Long) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderbase\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/orderbase\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderbase\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/orderbase\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/orderbase\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/orderbase","title":"OrderBase","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/ordersource\/isfullorderbook()","title":"func isFullOrderBook() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ispublishable(eventtype:)","title":"func isPublishable(eventType: AnyClass.Type) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/ordersource\/abe","title":"static let ABE: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/bate","title":"static let BATE: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/bi20","title":"static let BI20: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/bxtr","title":"static let BXTR: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/byx","title":"static let BYX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/bzx","title":"static let BZX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/c2ox","title":"static let C2OX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ceux","title":"static let CEUX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/cfe","title":"static let CFE: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/chix","title":"static let CHIX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/dea","title":"static let DEA: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/dex","title":"static let DEX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/eris","title":"static let ERIS: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/espd","title":"static let ESPD: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/fair","title":"static let FAIR: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/glbx-8ulae","title":"static let GLBX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ice","title":"static let ICE: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ise","title":"static let ISE: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ist","title":"static let IST: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/memx-8i7t3","title":"static let MEMX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/nfx","title":"static let NFX: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ntv-773uf","title":"static let NTV: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/smfe-2xqm","title":"static let SMFE: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/xeur-fa6f","title":"static let XEUR: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/xnfi","title":"static let XNFI: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/agregateask","title":"static let agregateAsk: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/agregatebid","title":"static let agregateBid: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/compsoiteask","title":"static let compsoiteAsk: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/compsoitebid","title":"static let compsoiteBid: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/defaultordersource","title":"static let defaultOrderSource: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/glbx-4gcnq","title":"static let glbx: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/iex","title":"static let iex: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/memx-9dof4","title":"static let memx: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/ntv-7392b","title":"static let ntv: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/regionalask","title":"static let regionalAsk: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/regionalbid","title":"static let regionalBid: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/smfe-2a6vf","title":"static let smfe: OrderSource?","type":"property"},{"path":"\/documentation\/dxfeedframework\/ordersource\/xeur-81z2w","title":"static let xeur: OrderSource?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/ordersource\/geteventtypemask(_:)","title":"static func getEventTypeMask(AnyClass) throws -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/ordersource\/valueof(identifier:)","title":"static func valueOf(identifier: Int) throws -> OrderSource","type":"method"},{"path":"\/documentation\/dxfeedframework\/ordersource\/valueof(name:)","title":"static func valueOf(name: String) throws -> OrderSource","type":"method"}],"path":"\/documentation\/dxfeedframework\/ordersource","title":"OrderSource","type":"class"},{"path":"\/documentation\/dxfeedframework\/otcmarketsorder","title":"OtcMarketsOrder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/profile\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/profile\/beta","title":"var beta: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/descriptionstr","title":"var descriptionStr: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/dividendfrequency","title":"var dividendFrequency: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/earningspershare","title":"var earningsPerShare: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/exdividendamount","title":"var exDividendAmount: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/exdividenddayid","title":"var exDividendDayId: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/freefloat","title":"var freeFloat: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/haltendtime","title":"var haltEndTime: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/haltstarttime","title":"var haltStartTime: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/high52weekprice","title":"var high52WeekPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/highlimitprice","title":"var highLimitPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/isshortsalerestricted","title":"var isShortSaleRestricted: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/istradinghalted","title":"var isTradingHalted: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/low52weekprice","title":"var low52WeekPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/lowlimitprice","title":"var lowLimitPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/shares","title":"var shares: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/shortsalerestriction","title":"var shortSaleRestriction: ShortSaleRestriction","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/statusreason","title":"var statusReason: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/profile\/tradingstatus","title":"var tradingStatus: TradingStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/profile\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/profile\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/profile","title":"Profile","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/promise\/await()","title":"func await() throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/await(millis:)","title":"func await(millis: Int32) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","title":"func awaitWithoutException(millis: Int32) -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/complete(result:)","title":"func complete(result: MarketEvent) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)","title":"func completeExceptionally(GraalException) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/getexception()","title":"func getException() -> GraalException?","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/getresult()","title":"func getResult() throws -> MarketEvent?","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/getresults()","title":"func getResults() throws -> [MarketEvent]?","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/hasexception()","title":"func hasException() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/hasresult()","title":"func hasResult() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/iscancelled()","title":"func isCancelled() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/isdone()","title":"func isDone() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)","title":"func whenDone(handler: PromiseHandler)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/promise\/promisehandler","title":"Promise.PromiseHandler","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/promise\/allof(promises:)","title":"static func allOf(promises: [Promise]) throws -> Promise?","type":"method"}],"path":"\/documentation\/dxfeedframework\/promise","title":"Promise","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/qdsutils\/execute(_:)","title":"static func execute([String]) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/qdsutils","title":"QdsUtils","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/quote\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/quote\/askexchangecode","title":"var askExchangeCode: Int16","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/askprice","title":"var askPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/asksize","title":"var askSize: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/asktime","title":"var askTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/bidexchangecode","title":"var bidExchangeCode: Int16","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/bidprice","title":"var bidPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/bidsize","title":"var bidSize: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/bidtime","title":"var bidTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/time","title":"var time: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/timenanopart","title":"var timeNanoPart: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/quote\/timenanos","title":"var timeNanos: Int64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/quote\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/quote\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/quote\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/quote\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/quote","title":"Quote","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/dayid","title":"var dayId: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/dayofmonth","title":"var dayOfMonth: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/dayofweek","title":"var dayOfWeek: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/endtime","title":"var endTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/holiday","title":"var holiday: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/monthofyear","title":"var monthOfYear: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/resettime","title":"var resetTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/sessions","title":"var sessions: [ScheduleSession]","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/shortday","title":"var shortDay: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/starttime","title":"var startTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/trading","title":"var trading: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/year","title":"var year: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/yearmonthday","title":"var yearMonthDay: Int32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/getnext(filter:)","title":"func getNext(filter: DayFilter) throws -> ScheduleDay?","type":"method"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/getprevious(filter:)","title":"func getPrevious(filter: DayFilter) throws -> ScheduleDay?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/scheduleday\/==(_:_:)","title":"static func == (ScheduleDay, ScheduleDay) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/scheduleday\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/scheduleday","title":"ScheduleDay","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/endtime","title":"let endTime: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/istrading","title":"let isTrading: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/starttime","title":"let startTime: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/type","title":"let type: ScheduleSessionType","type":"property"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/yearmonthday","title":"let yearMonthDay: Int32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/getnext(filter:)","title":"func getNext(filter: SessionFilter) throws -> ScheduleSession?","type":"method"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/getprevious(filter:)","title":"func getPrevious(filter: SessionFilter) throws -> ScheduleSession?","type":"method"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/schedulesession\/==(_:_:)","title":"static func == (ScheduleSession, ScheduleSession) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/schedulesession\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/schedulesession","title":"ScheduleSession","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scopeext\/valueof(value:)","title":"static func valueOf(value: Int) -> Scope","type":"method"}],"path":"\/documentation\/dxfeedframework\/scopeext","title":"ScopeExt","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/series\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/series\/callvolume","title":"var callVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/dividend","title":"var dividend: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/expiration","title":"var expiration: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/forwardprice","title":"var forwardPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/interest","title":"var interest: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/putcallratio","title":"var putCallRatio: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/putvolume","title":"var putVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/time","title":"var time: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/timesequence","title":"var timeSequence: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/volatility","title":"var volatility: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/series\/getoptionvolume()","title":"func getOptionVolume() -> Double","type":"method"},{"path":"\/documentation\/dxfeedframework\/series\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/series\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/series\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/series\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/series\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/series\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/series\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/series\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/series\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/series\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/series\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/series","title":"Series","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/add(_:)","title":"func add(SnapshotDelegate)","type":"method"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/removedelegate()","title":"func removeDelegate()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/receiveevents(_:)","title":"func receiveEvents([MarketEvent])","type":"method"}],"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/dxeventlistener-implementations","title":"DXEventListener Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/==(_:_:)","title":"static func == (SnapshotProcessor, SnapshotProcessor) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/snapshotprocessor\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/snapshotprocessor","title":"SnapshotProcessor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/spreadorder\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/spreadorder\/spreadsymbol","title":"var spreadSymbol: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/spreadorder\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/spreadorder\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/spreadorder","title":"SpreadOrder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/summary\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/summary\/daycloseprice","title":"var dayClosePrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/dayclosepricetype","title":"var dayClosePriceType: PriceType","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/dayhighprice","title":"var dayHighPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/dayid","title":"var dayId: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/daylowprice","title":"var dayLowPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/dayopenprice","title":"var dayOpenPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/openinterest","title":"var openInterest: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/prevdaycloseprice","title":"var prevDayClosePrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/prevdayclosepricetype","title":"var prevDayClosePriceType: PriceType","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/prevdayid","title":"var prevDayId: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/summary\/prevdayvolume","title":"var prevDayVolume: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/summary\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/summary\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/summary","title":"Summary","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/symbolparser\/parse(_:)","title":"static func parse(String) throws -> [String]","type":"method"}],"path":"\/documentation\/dxfeedframework\/symbolparser","title":"SymbolParser","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/systemproperty\/getproperty(_:)","title":"static func getProperty(String) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/systemproperty\/setproperty(_:_:)","title":"static func setProperty(String, String) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/systemproperty","title":"SystemProperty","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/delta","title":"var delta: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/dividend","title":"var dividend: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/gamma","title":"var gamma: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/interest","title":"var interest: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/price","title":"var price: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/underlyingprice","title":"var underlyingPrice: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/theoprice\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/theoprice\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/theoprice\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/theoprice\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/theoprice\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/theoprice\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/theoprice\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/theoprice\/time","title":"var time: Long","type":"property"}],"path":"\/documentation\/dxfeedframework\/theoprice\/itimeseriesevent-implementations","title":"ITimeSeriesEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/theoprice","title":"TheoPrice","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/aggressorside","title":"var aggressorSide: Side","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/askprice","title":"var askPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/bidprice","title":"var bidPrice: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/buyer","title":"var buyer: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/exchangecode","title":"var exchangeCode: Int16","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/exchangesaleconditions","title":"var exchangeSaleConditions: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/iscancel","title":"var isCancel: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/iscorrection","title":"var isCorrection: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/isextendedtradinghours","title":"var isExtendedTradingHours: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/isnew","title":"var isNew: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/isspreadleg","title":"var isSpreadLeg: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/isvalidtick","title":"var isValidTick: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/price","title":"var price: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/seller","title":"var seller: String?","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/size","title":"var size: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/timeandsaletype","title":"var timeAndSaleType: TimeAndSaleType","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/timenanopart","title":"var timeNanoPart: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/timenanos","title":"var timeNanos: Int64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/gettradethroughexempt()","title":"func getTradeThroughExempt() -> Character","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/settradethroughexempt(_:)","title":"func setTradeThroughExempt(Character) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/timeandsale\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsale\/time","title":"var time: Int64","type":"property"}],"path":"\/documentation\/dxfeedframework\/timeandsale\/itimeseriesevent-implementations","title":"ITimeSeriesEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/timeandsale","title":"TimeAndSale","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/init(symbol:date:)-5vh52","title":"init(symbol: AnyHashable, date: Date)","type":"init"},{"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/init(symbol:date:)-9ok7z","title":"init(symbol: Symbol, date: Date)","type":"init"},{"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/init(symbol:fromtime:)","title":"init(symbol: AnyHashable, fromTime: Long)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/timeseriessubscriptionsymbol","title":"TimeSeriesSubscriptionSymbol","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeutil\/getmillisfromtime(_:)","title":"static func getMillisFromTime(Long) -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/timeutil\/getsecondsfromtime(_:)","title":"static func getSecondsFromTime(Long) -> Int","type":"method"}],"path":"\/documentation\/dxfeedframework\/timeutil","title":"TimeUtil","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/trade\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/trade\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/trade\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/trade","title":"Trade","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradebase\/init(symbol:type:)","title":"init(symbol: String, type: EventCode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradebase\/change","title":"var change: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/dayid","title":"var dayId: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/dayturnover","title":"var dayTurnover: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/dayvolume","title":"var dayVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/exchangecode","title":"var exchangeCode: Int16","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/isextendedtradinghours","title":"var isExtendedTradingHours: Bool","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/price","title":"var price: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/size","title":"var size: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/tickdirection","title":"var tickDirection: Direction","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/time","title":"var time: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/timenanopart","title":"var timeNanoPart: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/timenanos","title":"var timeNanos: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/tradebase\/timesequence","title":"var timeSequence: Long","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradebase\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/tradebase\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/tradebase\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/dxfeedframework\/tradebase","title":"TradeBase","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradeeth\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradeeth\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradeeth\/type","title":"class var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/tradeeth","title":"TradeETH","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/backvolatility","title":"var backVolatility: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/callvolume","title":"var callVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/frontvolatility","title":"var frontVolatility: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/index","title":"var index: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/optionvolume","title":"var optionVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/putcallratio","title":"var putCallRatio: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/putvolume","title":"var putVolume: Double","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/volatility","title":"var volatility: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/getsequence()","title":"func getSequence() -> Int","type":"method"},{"path":"\/documentation\/dxfeedframework\/underlying\/setsequence(_:)","title":"func setSequence(Int) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/underlying\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/type","title":"class var type: EventCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/underlying\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/underlying\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/underlying\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/removeevent","title":"static var removeEvent: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/snapshotmode","title":"static var snapShotMode: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/snapshotbegin","title":"static var snapshotBegin: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/snapshotend","title":"static var snapshotEnd: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/snapshotsnip","title":"static var snapshotSnip: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/underlying\/txpending","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/underlying\/iindexedevent-implementations","title":"IIndexedEvent Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/underlying\/time","title":"var time: Long","type":"property"}],"path":"\/documentation\/dxfeedframework\/underlying\/itimeseriesevent-implementations","title":"ITimeSeriesEvent Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/underlying","title":"Underlying","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/stringvalue-5qfy7","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/all","title":"static let all: WildcardSymbol","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/==(_:_:)","title":"static func == (WildcardSymbol, WildcardSymbol) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/stringvalue-1hppd","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/wildcardsymbol\/symbol-implementations","title":"Symbol Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/wildcardsymbol","title":"WildcardSymbol","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpointlistener\/endpointdidchangestate(old:new:)","title":"func endpointDidChangeState(old: DXEndpointState, new: DXEndpointState)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxendpointlistener","title":"DXEndpointListener","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxeventlistener\/receiveevents(_:)","title":"func receiveEvents([MarketEvent])","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxeventlistener","title":"DXEventListener","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionlistener\/connectiondidchangestate(old:new:)","title":"func connectionDidChangeState(old: DXInstrumentProfileConnectionState, new: DXInstrumentProfileConnectionState)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionlistener","title":"DXInstrumentProfileConnectionListener","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileupdatelistener\/instrumentprofilesupdated(_:)","title":"func instrumentProfilesUpdated([InstrumentProfile])","type":"method"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileupdatelistener","title":"DXInstrumentProfileUpdateListener","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icandlesymbolproperty\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/icandlesymbolproperty\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/icandlesymbolproperty","title":"ICandleSymbolProperty","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/ieventtype\/eventsymbol","title":"var eventSymbol: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/ieventtype\/eventtime","title":"var eventTime: Int64","type":"property"},{"path":"\/documentation\/dxfeedframework\/ieventtype\/hashcode","title":"var hashCode: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/ieventtype\/type","title":"static var type: EventCode","type":"property"}],"path":"\/documentation\/dxfeedframework\/ieventtype","title":"IEventType","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/eventflags","title":"var eventFlags: Int32","type":"property"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/eventsource","title":"var eventSource: IndexedEventSource","type":"property"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/index","title":"var index: Long","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/endorsnap()","title":"func endOrSnap() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/isremove()","title":"func isRemove() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/pending()","title":"func pending() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/iindexedevent\/removeevent-4wx9l","title":"static var removeEvent: Int32","type":"property"}],"title":"IIndexedEvent Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/iindexedevent\/removeevent-2o32d","title":"static var removeEvent: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotmode-8tvrw","title":"static var snapShotMode: Int32","type":"property"}],"title":"IIndexedEvent Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotmode-63ok3","title":"static var snapShotMode: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotbegin()","title":"func snapshotBegin() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotbegin-8p34e","title":"static var snapshotBegin: Int32","type":"property"}],"title":"IIndexedEvent Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotbegin-51y9l","title":"static var snapshotBegin: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotend-5csc3","title":"static var snapshotEnd: Int32","type":"property"}],"title":"IIndexedEvent Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotend-3emwu","title":"static var snapshotEnd: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotsnip-7nvc9","title":"static var snapshotSnip: Int32","type":"property"}],"title":"IIndexedEvent Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/iindexedevent\/snapshotsnip-le44","title":"static var snapshotSnip: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/iindexedevent\/txpending-7mlhv","title":"static var txPending: Int32","type":"property"}],"title":"IIndexedEvent Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/iindexedevent\/txpending-2ugt5","title":"static var txPending: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/iindexedevent","title":"IIndexedEvent","type":"protocol"},{"path":"\/documentation\/dxfeedframework\/ilastingevent","title":"ILastingEvent","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/iobservablesubscription\/eventtypes","title":"var eventTypes: [IEventType.Type]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/iobservablesubscription\/addchangelistener(_:)","title":"func addChangeListener(ObservableSubscriptionChangeListener) throws","type":"method"},{"path":"\/documentation\/dxfeedframework\/iobservablesubscription\/isclosed()","title":"func isClosed() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/iobservablesubscription\/iscontains(_:)","title":"func isContains(IEventType.Type) -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/iobservablesubscription\/removechangelistener(_:)","title":"func removeChangeListener(ObservableSubscriptionChangeListener) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/iobservablesubscription","title":"IObservableSubscription","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/itimeseriesevent\/time","title":"var time: Long","type":"property"}],"path":"\/documentation\/dxfeedframework\/itimeseriesevent","title":"ITimeSeriesEvent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/observablesubscriptionchangelistener\/subscriptionclosed()","title":"func subscriptionClosed()","type":"method"},{"path":"\/documentation\/dxfeedframework\/observablesubscriptionchangelistener\/symbolsadded(symbols:)","title":"func symbolsAdded(symbols: Set<AnyHashable>)","type":"method"},{"path":"\/documentation\/dxfeedframework\/observablesubscriptionchangelistener\/symbolsremoved(symbols:)","title":"func symbolsRemoved(symbols: Set<AnyHashable>)","type":"method"}],"path":"\/documentation\/dxfeedframework\/observablesubscriptionchangelistener","title":"ObservableSubscriptionChangeListener","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/snapshotdelegate\/receiveevents(_:issnapshot:)","title":"func receiveEvents([MarketEvent], isSnapshot: Bool)","type":"method"}],"path":"\/documentation\/dxfeedframework\/snapshotdelegate","title":"SnapshotDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/dxfeedframework\/symbol\/stringvalue-132gg","title":"var stringValue: String","type":"property"}],"title":"Symbol Implementations","type":"groupMarker"}],"path":"\/documentation\/dxfeedframework\/symbol\/stringvalue-2xzz","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/symbol","title":"Symbol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandlealignment\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxcandlealignment","title":"DXCandleAlignment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandleprice\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxcandleprice\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandleprice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxcandleprice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandleprice\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandleprice\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandleprice\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandleprice\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandleprice\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandleprice\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxcandleprice","title":"DXCandlePrice","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlesession\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxcandlesession\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlesession\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxcandlesession\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlesession\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandlesession\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlesession\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandlesession\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandlesession\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandlesession\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxcandlesession","title":"DXCandleSession","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/periodintervalmillis","title":"let periodIntervalMillis: Long","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxcandletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandletype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandletype\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxcandletype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxcandletype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxcandletype","title":"DXCandleType","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxpricetype\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/dxfeedframework\/dxpricetype\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxpricetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxpricetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxpricetype\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/dxfeedframework\/dxpricetype\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxpricetype","title":"DXPriceType","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/marketeventconst\/maxsequence","title":"static let maxSequence: Int32","type":"property"}],"path":"\/documentation\/dxfeedframework\/marketeventconst","title":"MarketEventConst","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/stringreference(_:)","title":"func stringReference(AnyObject) -> String","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/long","title":"Long","type":"typealias"},{"path":"\/documentation\/dxfeedframework\/role","title":"Role","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/argumentnil","title":"case argumentNil","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/duplicateid","title":"case duplicateId","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/duplicatevalue","title":"case duplicateValue","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/exception(_:)","title":"case exception(String)","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/illegalargumentexception","title":"case illegalArgumentException","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/incorrectcandleprice","title":"case incorrectCandlePrice","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/invalidoperationexception(_:)","title":"case invalidOperationException(String)","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/missingcandleprice","title":"case missingCandlePrice","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/missingcandlesession","title":"case missingCandleSession","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/missingcandletype","title":"case missingCandleType","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/unknowcandlealignment","title":"case unknowCandleAlignment","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/unknowcandleprice","title":"case unknowCandlePrice","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/unknowcandlepricelevel","title":"case unknowCandlePriceLevel","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/unknowcandlesession","title":"case unknowCandleSession","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/unknowcandletype","title":"case unknowCandleType","type":"case"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/unknowvalue(_:_:)","title":"case unknowValue(String, String?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/argumentexception\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/argumentexception\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/argumentexception","title":"ArgumentException","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/midnight","title":"case midnight","type":"case"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/session","title":"case session","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/init(rawvalue:)","title":"init?(rawValue: DXCandleAlignment)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/tofullstring()","title":"func toFullString() -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/attributekey","title":"static let attributeKey: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/defaultalignment","title":"static let defaultAlignment: CandleAlignment","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/getattribute(_:)","title":"static func getAttribute(String?) throws -> CandleAlignment","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/normalizeattributeforsymbol(_:)","title":"static func normalizeAttributeForSymbol(String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/parse(_:)","title":"static func parse(String) throws -> CandleAlignment","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candlealignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlealignment\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/candlealignment\/icandlesymbolproperty-implementations","title":"ICandleSymbolProperty Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candlealignment","title":"CandleAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/ask","title":"case ask","type":"case"},{"path":"\/documentation\/dxfeedframework\/candleprice\/bid","title":"case bid","type":"case"},{"path":"\/documentation\/dxfeedframework\/candleprice\/last","title":"case last","type":"case"},{"path":"\/documentation\/dxfeedframework\/candleprice\/mark","title":"case mark","type":"case"},{"path":"\/documentation\/dxfeedframework\/candleprice\/settlement","title":"case settlement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/init(rawvalue:)","title":"init?(rawValue: DXCandlePrice)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/attributekey","title":"static let attributeKey: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candleprice\/defaultprice","title":"static let defaultPrice: CandlePrice","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/getattribute(_:)","title":"static func getAttribute(String?) throws -> CandlePrice","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleprice\/normalizeattributeforsymbol(_:)","title":"static func normalizeAttributeForSymbol(String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleprice\/parse(_:)","title":"static func parse(String) throws -> CandlePrice","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candleprice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candleprice\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candleprice\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/candleprice\/icandlesymbolproperty-implementations","title":"ICandleSymbolProperty Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candleprice","title":"CandlePrice","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/any","title":"case any","type":"case"},{"path":"\/documentation\/dxfeedframework\/candlesession\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/init(rawvalue:)","title":"init?(rawValue: DXCandleSession)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/attributekey","title":"static let attributeKey: String","type":"property"},{"path":"\/documentation\/dxfeedframework\/candlesession\/defaultsession","title":"static let defaultSession: CandleSession","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/getattribute(_:)","title":"static func getAttribute(String?) -> CandleSession","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlesession\/normalizeattributeforsymbol(_:)","title":"static func normalizeAttributeForSymbol(String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlesession\/parse(_:)","title":"static func parse(String) throws -> CandleSession","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candlesession\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candlesession\/changeattributeforsymbol(symbol:)","title":"func changeAttributeForSymbol(symbol: String?) -> String?","type":"method"},{"path":"\/documentation\/dxfeedframework\/candlesession\/checkinattribute(candlesymbol:)","title":"func checkInAttribute(candleSymbol: CandleSymbol) throws","type":"method"}],"path":"\/documentation\/dxfeedframework\/candlesession\/icandlesymbolproperty-implementations","title":"ICandleSymbolProperty Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candlesession","title":"CandleSession","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candletype\/day","title":"case day","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/hour","title":"case hour","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/minute","title":"case minute","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/month","title":"case month","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/optexp","title":"case optExp","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/price","title":"case price","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/pricemomentum","title":"case priceMomentum","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/pricerenko","title":"case priceRenko","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/second","title":"case second","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/tick","title":"case tick","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/volume","title":"case volume","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/week","title":"case week","type":"case"},{"path":"\/documentation\/dxfeedframework\/candletype\/year","title":"case year","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candletype\/init(rawvalue:)","title":"init?(rawValue: DXCandleType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candletype\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candletype\/parse(_:)","title":"static func parse(String) throws -> CandleType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/candletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/candletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/candletype","title":"CandleType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpointstate\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpointstate\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpointstate\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxendpointstate\/notconnected","title":"case notConnected","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxendpointstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxendpointstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxendpointstate","title":"DXEndpointState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/completed","title":"case completed","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/notconnected","title":"case notConnected","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/convettostring()","title":"func convetToString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dxinstrumentprofileconnectionstate","title":"DXInstrumentProfileConnectionState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/any","title":"case any","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/friday","title":"case friday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/holiday","title":"case holiday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/monday","title":"case monday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/nontrading","title":"case nonTrading","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/saturday","title":"case saturday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/shortday","title":"case shortDay","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/sunday","title":"case sunday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/thursday","title":"case thursday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/trading","title":"case trading","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/tuesday","title":"case tuesday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/wednesday","title":"case wednesday","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/weekday","title":"case weekDay","type":"case"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/weekend","title":"case weekEnd","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/dayfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/dayfilter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/dayfilter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/dayfilter","title":"DayFilter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/direction\/down","title":"case down","type":"case"},{"path":"\/documentation\/dxfeedframework\/direction\/undefined","title":"case undefined","type":"case"},{"path":"\/documentation\/dxfeedframework\/direction\/up","title":"case up","type":"case"},{"path":"\/documentation\/dxfeedframework\/direction\/zero","title":"case zero","type":"case"},{"path":"\/documentation\/dxfeedframework\/direction\/zerodown","title":"case zeroDown","type":"case"},{"path":"\/documentation\/dxfeedframework\/direction\/zeroup","title":"case zeroUp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/direction\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/direction\/valueof(_:)","title":"static func valueOf(Int) -> Direction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/direction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/direction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/direction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/direction","title":"Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/eventcode\/analyticorder","title":"case analyticOrder","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/candle","title":"case candle","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/configuration","title":"case configuration","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/dailycandle","title":"case dailyCandle","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/greeks","title":"case greeks","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/message","title":"case message","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/optionsale","title":"case optionSale","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/order","title":"case order","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/orderbase","title":"case orderBase","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/profile","title":"case profile","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/quote","title":"case quote","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/series","title":"case series","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/spreadorder","title":"case spreadOrder","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/summary","title":"case summary","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/theoprice","title":"case theoPrice","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/timeandsale","title":"case timeAndSale","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/trade","title":"case trade","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/tradeeth","title":"case tradeETH","type":"case"},{"path":"\/documentation\/dxfeedframework\/eventcode\/underlying","title":"case underlying","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/eventcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/eventcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/eventcode","title":"EventCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/graalexception\/fail(message:classname:stack:)","title":"case fail(message: String, className: String, stack: String)","type":"case"},{"path":"\/documentation\/dxfeedframework\/graalexception\/isolatefail(message:)","title":"case isolateFail(message: String)","type":"case"},{"path":"\/documentation\/dxfeedframework\/graalexception\/undefined","title":"case undefined","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/graalexception\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dxfeedframework\/graalexception\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/graalexception","title":"GraalException","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/native","title":"case native","type":"case"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/synthetic","title":"case synthetic","type":"case"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/icebergtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/icebergtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/icebergtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/icebergtype","title":"IcebergType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/additionalunderlyings","title":"case additionalUnderlyings","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/basecurrency","title":"case baseCurrency","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/cfi","title":"case cfi","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/country","title":"case country","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/currency","title":"case currency","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/cusip","title":"case cusip","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/descriptionstr","title":"case descriptionStr","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/exchangedata","title":"case exchangeData","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/exchanges","title":"case exchanges","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/expiration","title":"case expiration","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/expirationstyle","title":"case expirationStyle","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/icb","title":"case icb","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/isin","title":"case isin","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/lasttrade","title":"case lastTrade","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/localdescription","title":"case localDescription","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/localsymbol","title":"case localSymbol","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/mmy","title":"case mmy","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/multiplier","title":"case multiplier","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/opol","title":"case opol","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/optiontype","title":"case optionType","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/priceincrements","title":"case priceIncrements","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/product","title":"case product","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/sedol","title":"case sedol","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/settlementstyle","title":"case settlementStyle","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/sic","title":"case sic","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/spc","title":"case spc","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/strike","title":"case strike","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/symbol","title":"case symbol","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/tradinghours","title":"case tradingHours","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/type","title":"case type","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/underlying","title":"case underlying","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/getfield(instrumentprofile:)","title":"func getField(instrumentProfile: InstrumentProfile) -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/getnumericfield(instrumentprofile:)","title":"func getNumericField(instrumentProfile: InstrumentProfile) throws -> Double","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/isnumericfield()","title":"func isNumericField() -> Bool","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/setfield(instrumentprofile:value:)","title":"func setField(instrumentProfile: InstrumentProfile, value: String)","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/setnumericfield(instrumentprofile:value:)","title":"func setNumericField(instrumentProfile: InstrumentProfile, value: Double) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/find(_:)","title":"static func find(String) -> InstrumentProfileField?","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/formatdate(_:)","title":"static func formatDate(Long) -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/formatnumber(_:)","title":"static func formatNumber(Double) -> String","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/parsedate(_:)","title":"static func parseDate(String) -> Long","type":"method"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/parsenumber(_:)","title":"static func parseNumber(String) -> Double","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/instrumentprofilefield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/instrumentprofilefield","title":"InstrumentProfileField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/bond","title":"case bond","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/cfd","title":"case cfd","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/currency","title":"case currency","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/etf","title":"case etf","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/forex","title":"case forex","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/future","title":"case future","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/index","title":"case index","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/moneymarketfund","title":"case moneyMarketFund","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/mutualfund","title":"case mutualFund","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/option","title":"case option","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/other","title":"case other","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/product","title":"case product","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/removed","title":"case removed","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/spread","title":"case spread","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/stock","title":"case stock","type":"case"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/warrant","title":"case warrant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/find(_:)","title":"static func find(String) -> `Self`?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/instrumentprofiletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/instrumentprofiletype","title":"InstrumentProfileType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderaction\/bust","title":"case bust","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/execute","title":"case execute","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/modify","title":"case modify","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/new","title":"case new","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/replace","title":"case replace","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/trade","title":"case trade","type":"case"},{"path":"\/documentation\/dxfeedframework\/orderaction\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderaction\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/orderaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderaction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/orderaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/orderaction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/orderaction","title":"OrderAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/pricetype\/final","title":"case final","type":"case"},{"path":"\/documentation\/dxfeedframework\/pricetype\/indicative","title":"case indicative","type":"case"},{"path":"\/documentation\/dxfeedframework\/pricetype\/preliminary","title":"case preliminary","type":"case"},{"path":"\/documentation\/dxfeedframework\/pricetype\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/pricetype\/init(rawvalue:)","title":"init?(rawValue: DXPriceType)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/pricetype\/valueof(_:)","title":"static func valueOf(Int) -> PriceType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/pricetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/pricetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/pricetype","title":"PriceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/schedulesessiontype\/aftermarket","title":"case afterMarket","type":"case"},{"path":"\/documentation\/dxfeedframework\/schedulesessiontype\/notrading","title":"case noTrading","type":"case"},{"path":"\/documentation\/dxfeedframework\/schedulesessiontype\/premarket","title":"case preMarket","type":"case"},{"path":"\/documentation\/dxfeedframework\/schedulesessiontype\/regular","title":"case regular","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/schedulesessiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/schedulesessiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/schedulesessiontype","title":"ScheduleSessionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scope\/aggregate","title":"case aggregate","type":"case"},{"path":"\/documentation\/dxfeedframework\/scope\/composite","title":"case composite","type":"case"},{"path":"\/documentation\/dxfeedframework\/scope\/order","title":"case order","type":"case"},{"path":"\/documentation\/dxfeedframework\/scope\/regional","title":"case regional","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scope\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scope\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/scope\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scope\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/scope\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/scope\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/scope","title":"Scope","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/aftermarket","title":"case afterMarket","type":"case"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/any","title":"case any","type":"case"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/notrading","title":"case noTrading","type":"case"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/nontrading","title":"case nonTrading","type":"case"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/premarket","title":"case preMarket","type":"case"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/regular","title":"case regular","type":"case"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/trading","title":"case trading","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/sessionfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/sessionfilter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/sessionfilter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/sessionfilter","title":"SessionFilter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/active","title":"case active","type":"case"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/inactive","title":"case inactive","type":"case"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/valueof(_:)","title":"static func valueOf(Int) -> ShortSaleRestriction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/shortsalerestriction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/shortsalerestriction","title":"ShortSaleRestriction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/side\/buy","title":"case buy","type":"case"},{"path":"\/documentation\/dxfeedframework\/side\/sell","title":"case sell","type":"case"},{"path":"\/documentation\/dxfeedframework\/side\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/side\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/side\/valueof(_:)","title":"static func valueOf(Int) -> Side","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/side\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/side\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/side\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/side\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/side\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/side","title":"Side","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/cancel","title":"case cancel","type":"case"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/correction","title":"case correction","type":"case"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/new","title":"case new","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/valueof(_:)","title":"static func valueOf(Int) -> TimeAndSaleType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/timeandsaletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/timeandsaletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/timeandsaletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/timeandsaletype","title":"TimeAndSaleType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/active","title":"case active","type":"case"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/halted","title":"case halted","type":"case"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/valueof(_:)","title":"static func valueOf(Int) -> TradingStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dxfeedframework\/tradingstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dxfeedframework\/tradingstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dxfeedframework\/tradingstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dxfeedframework\/tradingstatus","title":"TradingStatus","type":"enum"}],"path":"\/documentation\/dxfeedframework","title":"DXFeedFramework","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}