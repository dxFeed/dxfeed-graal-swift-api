{"topicSections":[{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler"]},{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)"],"title":"Type Methods"}],"identifier":{"url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/dxfeedframework\/promise"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework"]]},"kind":"symbol","abstract":[{"text":"Result of a computation that will be completed normally or exceptionally in the future.","type":"text"},{"text":" ","type":"text"},{"text":"This class is designed to represent a promise to deliver certain result.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"platforms":["macOS"]}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","modules":[{"name":"DXFeedFramework"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"navigatorTitle":[{"text":"Promise","kind":"identifier"}],"externalID":"s:15DXFeedFramework7PromiseC","title":"Promise","roleHeading":"Class"},"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"title":"getException()","type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","url":"\/documentation\/dxfeedframework\/promise\/getexception()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getException"},{"kind":"text","text":"() -> "},{"text":"GraalException","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns exceptional outcome of computation. If computation has no  ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"text":" exception,","type":"text"},{"text":" ","type":"text"},{"text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then","type":"text"},{"text":" ","type":"text"},{"text":"the result of this method is not nil.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","isActive":true},{"type":"text","text":" cancelled, then this method returns an"},{"text":" ","type":"text"},{"type":"text","text":"instance of GraalException."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isDone()":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"type":"text","text":" when computation has"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","type":"reference","isActive":true},{"text":" completed normally,","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},{"text":" exceptionally,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or was "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"text":" canceled","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDone"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/isdone()","title":"isDone()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/allOf(promises:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/allof(promises:)","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allOf"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"promises"},{"kind":"text","text":": ["},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"allOf(promises:)","abstract":[{"text":"Returns a new promise that ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference","isActive":true},{"text":" completes when all promises from the given array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"complete normally or exceptionally."},{"text":" ","type":"text"},{"text":"The results of the given promises are not reflected in the returned promise, but may be","type":"text"},{"type":"text","text":" "},{"text":"obtained by inspecting them individually. If no promises are provided, returns a promise completed","type":"text"},{"text":" ","type":"text"},{"text":"with the value null.","type":"text"},{"text":" ","type":"text"},{"text":"When the resulting promise completes for any reason ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference","isActive":true},{"type":"text","text":" canceled, for example)"},{"type":"text","text":" "},{"text":"then all of the promises from the given array are canceled.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/whenDone(handler:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"whenDone"},{"kind":"text","text":"("},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC0C7Handlera","text":"PromiseHandler"},{"kind":"text","text":")"}],"type":"topic","title":"whenDone(handler:)","abstract":[{"text":"Registers a handler to be invoked exactly once when computation ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"type":"text","text":" completes."},{"type":"text","text":" "},{"text":"The handlerâ€™s  method is invoked immediately when this computation has already completed,","type":"text"},{"text":" ","type":"text"},{"text":"otherwise it will be invoked ","type":"text"},{"type":"strong","inlineContent":[{"text":"synchronously","type":"text"}]},{"type":"text","text":" in the future when computation"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","isActive":true,"type":"reference"},{"type":"text","text":" completes normally,"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","type":"reference","isActive":true},{"text":" exceptionally,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or is "},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference"},{"type":"text","text":" cancelled from the same thread that had invoked one of the completion methods."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await()":{"role":"symbol","kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/await()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"await","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"}],"type":"topic","title":"await()","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"This method waits forever."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/awaitWithoutException(millis:)":{"title":"awaitWithoutException(millis:)","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"awaitWithoutException","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"millis"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","kind":"symbol","role":"symbol","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"text":" ","type":"text"},{"text":"If the wait times out, then the computation is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" cancelled and exception is thrown."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/PromiseHandler":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"PromiseHandler","kind":"identifier"}],"url":"\/documentation\/dxfeedframework\/promise\/promisehandler","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PromiseHandler"}],"type":"topic","title":"Promise.PromiseHandler","abstract":[]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Promise"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","abstract":[{"text":"Result of a computation that will be completed normally or exceptionally in the future.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise","title":"Promise","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/completeExceptionally(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","title":"completeExceptionally(_:)","abstract":[{"text":"Completes computation exceptionally with a specified exception.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This method does nothing if computation has already "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"text":" completed,","type":"text"},{"type":"text","text":" "},{"text":"otherwise ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true,"type":"reference"},{"text":" will return the specified exception.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"completeExceptionally"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"GraalException","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/cancel()":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","abstract":[{"type":"text","text":"Cancels computation. This method does nothing if computation has already "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"type":"text","text":" completed."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/cancel()","title":"cancel()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await(millis:)":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"If the wait times out, then the computation is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},{"type":"text","text":" cancelled and exception is thrown."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"await","kind":"identifier"},{"text":"(","kind":"text"},{"text":"millis","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/await(millis:)","title":"await(millis:)","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/complete(result:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","title":"complete(result:)","abstract":[{"text":"Completes computation normally with a specified result.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This method does nothing if computation has already "},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference"},{"type":"text","text":" completed"},{"text":" ","type":"text"},{"text":"(normally, exceptionally, or was cancelled),","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"complete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"result","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/dxfeedframework\/promise\/complete(result:)","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","abstract":[],"kind":"symbol","type":"topic","title":"DXFeedFramework","role":"collection","url":"\/documentation\/dxfeedframework"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"type":"topic","title":"isCancelled()","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isCancelled"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"text":"true","type":"text"}],"type":"strong"},{"text":" when computation was canceled.","type":"text"},{"text":" ","type":"text"},{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"text":" method to get the corresponding exception.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"type":"topic","title":"hasException()","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","url":"\/documentation\/dxfeedframework\/promise\/hasexception()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasException","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference"},{"text":" method to get the exceptional outcome of the computation.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResults()":{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","title":"getResults()","abstract":[{"type":"text","text":"Returns results of computation. If computation has no result, then this method returns nil."}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/getresults()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getResults","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"MarketEvent","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"text":"]?","kind":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResult()":{"url":"\/documentation\/dxfeedframework\/promise\/getresult()","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","type":"topic","title":"getResult()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getResult","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasResult()":{"url":"\/documentation\/dxfeedframework\/promise\/hasresult()","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","type":"topic","title":"hasResult()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasResult","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"text":" when computation has completed normally.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()"},{"type":"text","text":" method to get the result of the computation."}]}}}