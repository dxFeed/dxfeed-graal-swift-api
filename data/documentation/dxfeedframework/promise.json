{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"text":" ","type":"text"},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise"},"metadata":{"modules":[{"name":"DXFeedFramework"}],"externalID":"s:15DXFeedFramework7PromiseC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"text":"Promise","kind":"identifier"}],"role":"symbol","title":"Promise"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler"]},{"title":"Type Methods","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)"]}],"variants":[{"paths":["\/documentation\/dxfeedframework\/promise"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/whenDone(handler:)":{"abstract":[{"type":"text","text":"Registers a handler to be invoked exactly once when computation "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"type":"text","text":" completes."},{"type":"text","text":" "},{"text":"The handlerâ€™s  method is invoked immediately when this computation has already completed,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise it will be invoked "},{"type":"strong","inlineContent":[{"text":"synchronously","type":"text"}]},{"type":"text","text":" in the future when computation"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","isActive":true},{"text":" completes normally,","type":"text"},{"type":"text","text":" "},{"text":"or ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","type":"reference","isActive":true},{"type":"text","text":" exceptionally,"},{"text":" ","type":"text"},{"text":"or is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"text":" cancelled from the same thread that had invoked one of the completion methods.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"whenDone","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"PromiseHandler","preciseIdentifier":"s:15DXFeedFramework7PromiseC0C7Handlera"},{"text":")","kind":"text"}],"title":"whenDone(handler:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)","url":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise","navigatorTitle":[{"text":"Promise","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"title":"Promise","type":"topic","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await()":{"role":"symbol","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"This method waits forever."}],"url":"\/documentation\/dxfeedframework\/promise\/await()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","kind":"symbol","title":"await()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"await","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResult()":{"title":"getResult()","url":"\/documentation\/dxfeedframework\/promise\/getresult()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getResult"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","abstract":[{"type":"text","text":"Returns results of computation. If computation has no result, then this method returns nil."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"text":"true","type":"text"}],"type":"strong"},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true,"type":"reference"},{"type":"text","text":" method to get the exceptional outcome of the computation."}],"title":"hasException()","url":"\/documentation\/dxfeedframework\/promise\/hasexception()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasException"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"url":"\/documentation\/dxfeedframework","kind":"symbol","role":"collection","abstract":[],"title":"DXFeedFramework","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/allOf(promises:)":{"role":"symbol","abstract":[{"text":"Returns a new promise that ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"type":"text","text":" completes when all promises from the given array"},{"text":" ","type":"text"},{"text":"complete normally or exceptionally.","type":"text"},{"type":"text","text":" "},{"text":"The results of the given promises are not reflected in the returned promise, but may be","type":"text"},{"type":"text","text":" "},{"text":"obtained by inspecting them individually. If no promises are provided, returns a promise completed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the value null."},{"type":"text","text":" "},{"text":"When the resulting promise completes for any reason ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference","isActive":true},{"type":"text","text":" canceled, for example)"},{"type":"text","text":" "},{"type":"text","text":"then all of the promises from the given array are canceled."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)","url":"\/documentation\/dxfeedframework\/promise\/allof(promises:)","kind":"symbol","title":"allOf(promises:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allOf","kind":"identifier"},{"kind":"text","text":"("},{"text":"promises","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","kind":"typeIdentifier","text":"Promise"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/cancel()":{"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/cancel()","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"kind":"text","text":"()"}],"title":"cancel()","type":"topic","abstract":[{"text":"Cancels computation. This method does nothing if computation has already ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},{"text":" completed.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/complete(result:)":{"url":"\/documentation\/dxfeedframework\/promise\/complete(result:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"complete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"result","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"complete(result:)","type":"topic","abstract":[{"text":"Completes computation normally with a specified result.","type":"text"},{"text":" ","type":"text"},{"text":"This method does nothing if computation has already ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"type":"text","text":" completed"},{"type":"text","text":" "},{"type":"text","text":"(normally, exceptionally, or was cancelled),"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/awaitWithoutException(millis:)":{"role":"symbol","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"type":"text","text":" "},{"text":"If the wait times out, then the computation is ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true,"type":"reference"},{"type":"text","text":" cancelled and exception is thrown."}],"url":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","kind":"symbol","title":"awaitWithoutException(millis:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"awaitWithoutException","kind":"identifier"},{"kind":"text","text":"("},{"text":"millis","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isDone()":{"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/isdone()","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDone"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isDone()","type":"topic","abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"type":"text","text":" when computation has"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","type":"reference"},{"type":"text","text":" completed normally,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","isActive":true},{"type":"text","text":" exceptionally,"},{"type":"text","text":" "},{"text":"or was ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},{"text":" canceled","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResults()":{"role":"symbol","abstract":[{"type":"text","text":"Returns results of computation. If computation has no result, then this method returns nil."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","url":"\/documentation\/dxfeedframework\/promise\/getresults()","kind":"symbol","title":"getResults()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getResults"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"MarketEvent","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"text":"]?","kind":"text"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/PromiseHandler":{"role":"symbol","abstract":[],"url":"\/documentation\/dxfeedframework\/promise\/promisehandler","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler","navigatorTitle":[{"kind":"identifier","text":"PromiseHandler"}],"kind":"symbol","title":"Promise.PromiseHandler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PromiseHandler","kind":"identifier"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/completeExceptionally(_:)":{"url":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"completeExceptionally","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","text":"GraalException","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"completeExceptionally(_:)","type":"topic","abstract":[{"type":"text","text":"Completes computation exceptionally with a specified exception."},{"type":"text","text":" "},{"type":"text","text":"This method does nothing if computation has already "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},{"text":" completed,","type":"text"},{"type":"text","text":" "},{"text":"otherwise ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"text":" will return the specified exception.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await(millis:)":{"role":"symbol","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"type":"text","text":" "},{"text":"If the wait times out, then the computation is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference"},{"type":"text","text":" cancelled and exception is thrown."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","url":"\/documentation\/dxfeedframework\/promise\/await(millis:)","kind":"symbol","title":"await(millis:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"await","kind":"identifier"},{"text":"(","kind":"text"},{"text":"millis","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"url":"\/documentation\/dxfeedframework\/promise\/getexception()","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getException"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","text":"GraalException"},{"kind":"text","text":"?"}],"title":"getException()","type":"topic","abstract":[{"text":"Returns exceptional outcome of computation. If computation has no  ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"text":" exception,","type":"text"},{"type":"text","text":" "},{"text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","isActive":true},{"type":"text","text":" cancelled, then this method returns an"},{"text":" ","type":"text"},{"text":"instance of GraalException.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation was canceled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true,"type":"reference"},{"type":"text","text":" method to get the corresponding exception."}],"title":"isCancelled()","url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isCancelled"},{"text":"() -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasResult()":{"role":"symbol","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation has completed normally."},{"text":" ","type":"text"},{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","isActive":true},{"type":"text","text":" method to get the result of the computation."}],"url":"\/documentation\/dxfeedframework\/promise\/hasresult()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","kind":"symbol","title":"hasResult()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasResult"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"}}}