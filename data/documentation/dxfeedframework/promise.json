{"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework"]]},"identifier":{"url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"Promise","kind":"identifier"}],"symbolKind":"class","externalID":"s:15DXFeedFramework7PromiseC","modules":[{"name":"DXFeedFramework"}],"roleHeading":"Class","title":"Promise","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}]},"kind":"symbol","abstract":[{"text":"Result of a computation that will be completed normally or exceptionally in the future.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler"]},{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)"],"title":"Type Methods"}],"variants":[{"paths":["\/documentation\/dxfeedframework\/promise"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}]}]}],"sections":[],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"kind":"symbol","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation was canceled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference"},{"type":"text","text":" method to get the corresponding exception."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCancelled","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","title":"isCancelled()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/completeExceptionally(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"completeExceptionally"},{"text":"(","kind":"text"},{"text":"GraalException","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","kind":"symbol","title":"completeExceptionally(_:)","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)","abstract":[{"type":"text","text":"Completes computation exceptionally with a specified exception."},{"type":"text","text":" "},{"type":"text","text":"This method does nothing if computation has already "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},{"text":" completed,","type":"text"},{"type":"text","text":" "},{"text":"otherwise ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference"},{"text":" will return the specified exception.","type":"text"}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/allOf(promises:)":{"title":"allOf(promises:)","role":"symbol","abstract":[{"text":"Returns a new promise that ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference"},{"text":" completes when all promises from the given array","type":"text"},{"type":"text","text":" "},{"text":"complete normally or exceptionally.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The results of the given promises are not reflected in the returned promise, but may be"},{"type":"text","text":" "},{"type":"text","text":"obtained by inspecting them individually. If no promises are provided, returns a promise completed"},{"type":"text","text":" "},{"text":"with the value null.","type":"text"},{"text":" ","type":"text"},{"text":"When the resulting promise completes for any reason ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" canceled, for example)"},{"text":" ","type":"text"},{"type":"text","text":"then all of the promises from the given array are canceled."}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allOf","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promises"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Promise","preciseIdentifier":"s:15DXFeedFramework7PromiseC"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Promise","preciseIdentifier":"s:15DXFeedFramework7PromiseC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/dxfeedframework\/promise\/allof(promises:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/awaitWithoutException(millis:)":{"url":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"awaitWithoutException"},{"kind":"text","text":"("},{"text":"millis","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","title":"awaitWithoutException(millis:)","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"If the wait times out, then the computation is "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference","isActive":true},{"text":" cancelled and exception is thrown.","type":"text"}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResults()":{"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/getresults()","role":"symbol","title":"getResults()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getResults","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"MarketEvent","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"text":"]?","kind":"text"}],"abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"text":" when computation has completed exceptionally or was cancelled.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference"},{"type":"text","text":" method to get the exceptional outcome of the computation."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasException","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/dxfeedframework\/promise\/hasexception()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","title":"hasException()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"await"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","kind":"symbol","title":"await()","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/await()","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"This method waits forever."}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"title":"DXFeedFramework","abstract":[],"url":"\/documentation\/dxfeedframework","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","role":"collection","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"url":"\/documentation\/dxfeedframework\/promise","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Promise"}],"navigatorTitle":[{"text":"Promise","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","title":"Promise","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"text":" ","type":"text"},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isDone()":{"url":"\/documentation\/dxfeedframework\/promise\/isdone()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDone"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","title":"isDone()","abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"type":"text","text":" when computation has"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)"},{"type":"text","text":" completed normally,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},{"text":" exceptionally,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or was "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true,"type":"reference"},{"type":"text","text":" canceled"}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/cancel()":{"url":"\/documentation\/dxfeedframework\/promise\/cancel()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","title":"cancel()","abstract":[{"type":"text","text":"Cancels computation. This method does nothing if computation has already "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"type":"text","text":" completed."}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await(millis:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"await"},{"text":"(","kind":"text"},{"text":"millis","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","kind":"typeIdentifier","text":"Promise"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","kind":"symbol","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"If the wait times out, then the computation is "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference","isActive":true},{"type":"text","text":" cancelled and exception is thrown."}],"title":"await(millis:)","url":"\/documentation\/dxfeedframework\/promise\/await(millis:)","type":"topic","role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/complete(result:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"complete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"result","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","kind":"symbol","title":"complete(result:)","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/complete(result:)","abstract":[{"type":"text","text":"Completes computation normally with a specified result."},{"text":" ","type":"text"},{"type":"text","text":"This method does nothing if computation has already "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"type":"text","text":" completed"},{"text":" ","type":"text"},{"type":"text","text":"(normally, exceptionally, or was cancelled),"}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/whenDone(handler:)":{"title":"whenDone(handler:)","role":"symbol","abstract":[{"type":"text","text":"Registers a handler to be invoked exactly once when computation "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"type":"text","text":" completes."},{"text":" ","type":"text"},{"type":"text","text":"The handler’s  method is invoked immediately when this computation has already completed,"},{"text":" ","type":"text"},{"type":"text","text":"otherwise it will be invoked "},{"inlineContent":[{"text":"synchronously","type":"text"}],"type":"strong"},{"type":"text","text":" in the future when computation"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)"},{"type":"text","text":" completes normally,"},{"type":"text","text":" "},{"text":"or ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","isActive":true,"type":"reference"},{"type":"text","text":" exceptionally,"},{"type":"text","text":" "},{"text":"or is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},{"text":" cancelled from the same thread that had invoked one of the completion methods.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"whenDone","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC0C7Handlera","text":"PromiseHandler"},{"text":")","kind":"text"}],"url":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","type":"reference","isActive":true},{"text":" exception,","type":"text"},{"text":" ","type":"text"},{"text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","isActive":true},{"text":" cancelled, then this method returns an","type":"text"},{"type":"text","text":" "},{"text":"instance of GraalException.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","text":"GraalException","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/dxfeedframework\/promise\/getexception()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","title":"getException()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResult()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getResult","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","kind":"symbol","title":"getResult()","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/getresult()","abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/PromiseHandler":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PromiseHandler","kind":"identifier"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler","navigatorTitle":[{"kind":"identifier","text":"PromiseHandler"}],"kind":"symbol","abstract":[],"title":"Promise.PromiseHandler","url":"\/documentation\/dxfeedframework\/promise\/promisehandler","type":"topic","role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasResult()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasResult","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","kind":"symbol","title":"hasResult()","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/hasresult()","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"text":" when computation has completed normally.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()"},{"text":" method to get the result of the computation.","type":"text"}],"role":"symbol"}}}