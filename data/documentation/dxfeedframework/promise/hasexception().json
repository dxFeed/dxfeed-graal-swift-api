{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},"abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"type":"text","text":" method to get the exceptional outcome of the computation."}],"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise"]]},"variants":[{"paths":["\/documentation\/dxfeedframework\/promise\/hasexception()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"title":"hasException()","symbolKind":"method","modules":[{"name":"DXFeedFramework"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasException"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:15DXFeedFramework7PromiseC12hasExceptionSbyF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}]}],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"title":"DXFeedFramework","url":"\/documentation\/dxfeedframework","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","abstract":[],"kind":"symbol","type":"topic","role":"collection"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getException","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"GraalException","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO"},{"text":"?","kind":"text"}],"url":"\/documentation\/dxfeedframework\/promise\/getexception()","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","role":"symbol","title":"getException()","abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"type":"text","text":" exception,"},{"text":" ","type":"text"},{"text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","isActive":true,"type":"reference"},{"text":" cancelled, then this method returns an","type":"text"},{"type":"text","text":" "},{"text":"instance of GraalException.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Promise","kind":"identifier"}],"url":"\/documentation\/dxfeedframework\/promise","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","role":"symbol","title":"Promise","navigatorTitle":[{"kind":"identifier","text":"Promise"}],"abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isCancelled","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","role":"symbol","title":"isCancelled()","abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"type":"text","text":" when computation was canceled."},{"text":" ","type":"text"},{"text":"Use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"text":" method to get the corresponding exception.","type":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","url":"\/documentation\/dxfeedframework\/promise\/hasexception()","title":"hasException()","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"inlineContent":[{"text":"true","type":"text"}],"type":"strong"},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"text":" ","type":"text"},{"text":"Use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference"},{"text":" method to get the exceptional outcome of the computation.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasException","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic"}}}